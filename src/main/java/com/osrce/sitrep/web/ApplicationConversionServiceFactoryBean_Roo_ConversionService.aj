// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.osrce.sitrep.web;

import com.osrce.sitrep.domain.Entity;
import com.osrce.sitrep.domain.EntityStatus;
import com.osrce.sitrep.domain.Event;
import com.osrce.sitrep.domain.Layer;
import com.osrce.sitrep.domain.Location;
import com.osrce.sitrep.domain.Query;
import com.osrce.sitrep.domain.Srgroup;
import com.osrce.sitrep.domain.Srmap;
import com.osrce.sitrep.domain.Srule;
import com.osrce.sitrep.domain.Sruser;
import com.osrce.sitrep.domain.Ssymbolizer;
import com.osrce.sitrep.domain.Style;
import com.osrce.sitrep.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Entity, String> ApplicationConversionServiceFactoryBean.getEntityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.Entity, java.lang.String>() {
            public String convert(Entity entity) {
                return new StringBuilder().append(entity.getGroupId()).append(' ').append(entity.getName()).append(' ').append(entity.getCreated()).append(' ').append(entity.getUpdated()).toString();
            }
        };
    }
    
    public Converter<Long, Entity> ApplicationConversionServiceFactoryBean.getIdToEntityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.Entity>() {
            public com.osrce.sitrep.domain.Entity convert(java.lang.Long id) {
                return Entity.findEntity(id);
            }
        };
    }
    
    public Converter<String, Entity> ApplicationConversionServiceFactoryBean.getStringToEntityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.Entity>() {
            public com.osrce.sitrep.domain.Entity convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Entity.class);
            }
        };
    }
    
    public Converter<EntityStatus, String> ApplicationConversionServiceFactoryBean.getEntityStatusToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.EntityStatus, java.lang.String>() {
            public String convert(EntityStatus entityStatus) {
                return new StringBuilder().append(entityStatus.getCreated()).append(' ').append(entityStatus.getUpdated()).append(' ').append(entityStatus.getDataBegin()).append(' ').append(entityStatus.getDataEnd()).toString();
            }
        };
    }
    
    public Converter<Long, EntityStatus> ApplicationConversionServiceFactoryBean.getIdToEntityStatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.EntityStatus>() {
            public com.osrce.sitrep.domain.EntityStatus convert(java.lang.Long id) {
                return EntityStatus.findEntityStatus(id);
            }
        };
    }
    
    public Converter<String, EntityStatus> ApplicationConversionServiceFactoryBean.getStringToEntityStatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.EntityStatus>() {
            public com.osrce.sitrep.domain.EntityStatus convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), EntityStatus.class);
            }
        };
    }
    
    public Converter<Event, String> ApplicationConversionServiceFactoryBean.getEventToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.Event, java.lang.String>() {
            public String convert(Event event) {
                return new StringBuilder().append(event.getGroupId()).append(' ').append(event.getCreated()).append(' ').append(event.getUpdated()).append(' ').append(event.getDataBegin()).toString();
            }
        };
    }
    
    public Converter<Long, Event> ApplicationConversionServiceFactoryBean.getIdToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.Event>() {
            public com.osrce.sitrep.domain.Event convert(java.lang.Long id) {
                return Event.findEvent(id);
            }
        };
    }
    
    public Converter<String, Event> ApplicationConversionServiceFactoryBean.getStringToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.Event>() {
            public com.osrce.sitrep.domain.Event convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Event.class);
            }
        };
    }
    
    public Converter<Layer, String> ApplicationConversionServiceFactoryBean.getLayerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.Layer, java.lang.String>() {
            public String convert(Layer layer) {
                return new StringBuilder().append(layer.getName()).append(' ').append(layer.getLtype()).append(' ').append(layer.getLformat()).append(' ').append(layer.getProjection()).toString();
            }
        };
    }
    
    public Converter<Long, Layer> ApplicationConversionServiceFactoryBean.getIdToLayerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.Layer>() {
            public com.osrce.sitrep.domain.Layer convert(java.lang.Long id) {
                return Layer.findLayer(id);
            }
        };
    }
    
    public Converter<String, Layer> ApplicationConversionServiceFactoryBean.getStringToLayerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.Layer>() {
            public com.osrce.sitrep.domain.Layer convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Layer.class);
            }
        };
    }
    
    public Converter<Location, String> ApplicationConversionServiceFactoryBean.getLocationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.Location, java.lang.String>() {
            public String convert(Location location) {
                return new StringBuilder().append(location.getSource()).append(' ').append(location.getCreated()).append(' ').append(location.getUpdated()).append(' ').append(location.getGeometry()).toString();
            }
        };
    }
    
    public Converter<Long, Location> ApplicationConversionServiceFactoryBean.getIdToLocationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.Location>() {
            public com.osrce.sitrep.domain.Location convert(java.lang.Long id) {
                return Location.findLocation(id);
            }
        };
    }
    
    public Converter<String, Location> ApplicationConversionServiceFactoryBean.getStringToLocationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.Location>() {
            public com.osrce.sitrep.domain.Location convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Location.class);
            }
        };
    }
    
    public Converter<Query, String> ApplicationConversionServiceFactoryBean.getQueryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.Query, java.lang.String>() {
            public String convert(Query query) {
                return new StringBuilder().append(query.getName()).append(' ').append(query.getNotes()).append(' ').append(query.getData()).append(' ').append(query.getCreated()).toString();
            }
        };
    }
    
    public Converter<Long, Query> ApplicationConversionServiceFactoryBean.getIdToQueryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.Query>() {
            public com.osrce.sitrep.domain.Query convert(java.lang.Long id) {
                return Query.findQuery(id);
            }
        };
    }
    
    public Converter<String, Query> ApplicationConversionServiceFactoryBean.getStringToQueryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.Query>() {
            public com.osrce.sitrep.domain.Query convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Query.class);
            }
        };
    }
    
    public Converter<Srgroup, String> ApplicationConversionServiceFactoryBean.getSrgroupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.Srgroup, java.lang.String>() {
            public String convert(Srgroup srgroup) {
                return new StringBuilder().append(srgroup.getName()).append(' ').append(srgroup.getParentId()).append(' ').append(srgroup.getCreated()).append(' ').append(srgroup.getUpdated()).toString();
            }
        };
    }
    
    public Converter<Long, Srgroup> ApplicationConversionServiceFactoryBean.getIdToSrgroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.Srgroup>() {
            public com.osrce.sitrep.domain.Srgroup convert(java.lang.Long id) {
                return Srgroup.findSrgroup(id);
            }
        };
    }
    
    public Converter<String, Srgroup> ApplicationConversionServiceFactoryBean.getStringToSrgroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.Srgroup>() {
            public com.osrce.sitrep.domain.Srgroup convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Srgroup.class);
            }
        };
    }
    
    public Converter<Srmap, String> ApplicationConversionServiceFactoryBean.getSrmapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.Srmap, java.lang.String>() {
            public String convert(Srmap srmap) {
                return new StringBuilder().append(srmap.getGroupId()).append(' ').append(srmap.getGeometry()).toString();
            }
        };
    }
    
    public Converter<Long, Srmap> ApplicationConversionServiceFactoryBean.getIdToSrmapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.Srmap>() {
            public com.osrce.sitrep.domain.Srmap convert(java.lang.Long id) {
                return Srmap.findSrmap(id);
            }
        };
    }
    
    public Converter<String, Srmap> ApplicationConversionServiceFactoryBean.getStringToSrmapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.Srmap>() {
            public com.osrce.sitrep.domain.Srmap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Srmap.class);
            }
        };
    }
    
    public Converter<Srule, String> ApplicationConversionServiceFactoryBean.getSruleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.Srule, java.lang.String>() {
            public String convert(Srule srule) {
                return new StringBuilder().append(srule.getName()).append(' ').append(srule.getStyleId()).append(' ').append(srule.getSymbolizerId()).append(' ').append(srule.getFilterData()).toString();
            }
        };
    }
    
    public Converter<Long, Srule> ApplicationConversionServiceFactoryBean.getIdToSruleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.Srule>() {
            public com.osrce.sitrep.domain.Srule convert(java.lang.Long id) {
                return Srule.findSrule(id);
            }
        };
    }
    
    public Converter<String, Srule> ApplicationConversionServiceFactoryBean.getStringToSruleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.Srule>() {
            public com.osrce.sitrep.domain.Srule convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Srule.class);
            }
        };
    }
    
    public Converter<Sruser, String> ApplicationConversionServiceFactoryBean.getSruserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.Sruser, java.lang.String>() {
            public String convert(Sruser sruser) {
                return new StringBuilder().append(sruser.getGroupId()).append(' ').append(sruser.getName()).append(' ').append(sruser.getCreated()).append(' ').append(sruser.getUpdated()).toString();
            }
        };
    }
    
    public Converter<Long, Sruser> ApplicationConversionServiceFactoryBean.getIdToSruserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.Sruser>() {
            public com.osrce.sitrep.domain.Sruser convert(java.lang.Long id) {
                return Sruser.findSruser(id);
            }
        };
    }
    
    public Converter<String, Sruser> ApplicationConversionServiceFactoryBean.getStringToSruserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.Sruser>() {
            public com.osrce.sitrep.domain.Sruser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Sruser.class);
            }
        };
    }
    
    public Converter<Ssymbolizer, String> ApplicationConversionServiceFactoryBean.getSsymbolizerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.Ssymbolizer, java.lang.String>() {
            public String convert(Ssymbolizer ssymbolizer) {
                return new StringBuilder().append(ssymbolizer.getName()).append(' ').append(ssymbolizer.getLabel()).append(' ').append(ssymbolizer.getRotation()).append(' ').append(ssymbolizer.getCreated()).toString();
            }
        };
    }
    
    public Converter<Long, Ssymbolizer> ApplicationConversionServiceFactoryBean.getIdToSsymbolizerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.Ssymbolizer>() {
            public com.osrce.sitrep.domain.Ssymbolizer convert(java.lang.Long id) {
                return Ssymbolizer.findSsymbolizer(id);
            }
        };
    }
    
    public Converter<String, Ssymbolizer> ApplicationConversionServiceFactoryBean.getStringToSsymbolizerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.Ssymbolizer>() {
            public com.osrce.sitrep.domain.Ssymbolizer convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Ssymbolizer.class);
            }
        };
    }
    
    public Converter<Style, String> ApplicationConversionServiceFactoryBean.getStyleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.Style, java.lang.String>() {
            public String convert(Style style) {
                return new StringBuilder().append(style.getName()).append(' ').append(style.getStylemapId()).append(' ').append(style.getRenderType()).append(' ').append(style.getDefaultsymbolizerId()).toString();
            }
        };
    }
    
    public Converter<Long, Style> ApplicationConversionServiceFactoryBean.getIdToStyleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.osrce.sitrep.domain.Style>() {
            public com.osrce.sitrep.domain.Style convert(java.lang.Long id) {
                return Style.findStyle(id);
            }
        };
    }
    
    public Converter<String, Style> ApplicationConversionServiceFactoryBean.getStringToStyleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.Style>() {
            public com.osrce.sitrep.domain.Style convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Style.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getEntityToStringConverter());
        registry.addConverter(getIdToEntityConverter());
        registry.addConverter(getStringToEntityConverter());
        registry.addConverter(getEntityStatusToStringConverter());
        registry.addConverter(getIdToEntityStatusConverter());
        registry.addConverter(getStringToEntityStatusConverter());
        registry.addConverter(getEventToStringConverter());
        registry.addConverter(getIdToEventConverter());
        registry.addConverter(getStringToEventConverter());
        registry.addConverter(getLayerToStringConverter());
        registry.addConverter(getIdToLayerConverter());
        registry.addConverter(getStringToLayerConverter());
        registry.addConverter(getLocationToStringConverter());
        registry.addConverter(getIdToLocationConverter());
        registry.addConverter(getStringToLocationConverter());
        registry.addConverter(getQueryToStringConverter());
        registry.addConverter(getIdToQueryConverter());
        registry.addConverter(getStringToQueryConverter());
        registry.addConverter(getSrgroupToStringConverter());
        registry.addConverter(getIdToSrgroupConverter());
        registry.addConverter(getStringToSrgroupConverter());
        registry.addConverter(getSrmapToStringConverter());
        registry.addConverter(getIdToSrmapConverter());
        registry.addConverter(getStringToSrmapConverter());
        registry.addConverter(getSruleToStringConverter());
        registry.addConverter(getIdToSruleConverter());
        registry.addConverter(getStringToSruleConverter());
        registry.addConverter(getSruserToStringConverter());
        registry.addConverter(getIdToSruserConverter());
        registry.addConverter(getStringToSruserConverter());
        registry.addConverter(getSsymbolizerToStringConverter());
        registry.addConverter(getIdToSsymbolizerConverter());
        registry.addConverter(getStringToSsymbolizerConverter());
        registry.addConverter(getStyleToStringConverter());
        registry.addConverter(getIdToStyleConverter());
        registry.addConverter(getStringToStyleConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
