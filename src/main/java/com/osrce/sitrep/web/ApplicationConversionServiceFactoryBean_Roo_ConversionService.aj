// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.osrce.sitrep.web;

import com.osrce.sitrep.domain.SpatialRefSys;
import com.osrce.sitrep.domain.SrAclPermissions;
import com.osrce.sitrep.domain.SrAssets;
import com.osrce.sitrep.domain.SrAssetsStatus;
import com.osrce.sitrep.domain.SrCfs;
import com.osrce.sitrep.domain.SrCfsPK;
import com.osrce.sitrep.domain.SrCfsUpdatequeue;
import com.osrce.sitrep.domain.SrCfsUpdatequeuePK;
import com.osrce.sitrep.domain.SrGroups;
import com.osrce.sitrep.domain.SrLayerDynamicData;
import com.osrce.sitrep.domain.SrLayerStaticData;
import com.osrce.sitrep.domain.SrLayers;
import com.osrce.sitrep.domain.SrLocations;
import com.osrce.sitrep.domain.SrLocationsWorkqueue;
import com.osrce.sitrep.domain.SrModules;
import com.osrce.sitrep.domain.SrQueries;
import com.osrce.sitrep.domain.SrSession;
import com.osrce.sitrep.domain.SrStylePresets;
import com.osrce.sitrep.domain.SrStyleRules;
import com.osrce.sitrep.domain.SrStyleSymbolizers;
import com.osrce.sitrep.domain.SrStyles;
import com.osrce.sitrep.domain.SrUsers;
import com.osrce.sitrep.domain.SrWindowLayout;
import com.osrce.sitrep.web.ApplicationConversionServiceFactoryBean;
import org.apache.commons.codec.binary.Base64;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<SpatialRefSys, String> ApplicationConversionServiceFactoryBean.getSpatialRefSysToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SpatialRefSys, java.lang.String>() {
            public String convert(SpatialRefSys spatialRefSys) {
                return new StringBuilder().append(spatialRefSys.getAuthName()).append(' ').append(spatialRefSys.getAuthSrid()).append(' ').append(spatialRefSys.getSrtext()).append(' ').append(spatialRefSys.getProj4text()).toString();
            }
        };
    }
    
    public Converter<Integer, SpatialRefSys> ApplicationConversionServiceFactoryBean.getIdToSpatialRefSysConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SpatialRefSys>() {
            public com.osrce.sitrep.domain.SpatialRefSys convert(java.lang.Integer id) {
                return SpatialRefSys.findSpatialRefSys(id);
            }
        };
    }
    
    public Converter<String, SpatialRefSys> ApplicationConversionServiceFactoryBean.getStringToSpatialRefSysConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SpatialRefSys>() {
            public com.osrce.sitrep.domain.SpatialRefSys convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SpatialRefSys.class);
            }
        };
    }
    
    public Converter<SrAclPermissions, String> ApplicationConversionServiceFactoryBean.getSrAclPermissionsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrAclPermissions, java.lang.String>() {
            public String convert(SrAclPermissions srAclPermissions) {
                return new StringBuilder().append(srAclPermissions.getRoleType()).append(' ').append(srAclPermissions.getRoleId()).append(' ').append(srAclPermissions.getResourceId()).append(' ').append(srAclPermissions.getPermissionCreate()).toString();
            }
        };
    }
    
    public Converter<Integer, SrAclPermissions> ApplicationConversionServiceFactoryBean.getIdToSrAclPermissionsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrAclPermissions>() {
            public com.osrce.sitrep.domain.SrAclPermissions convert(java.lang.Integer id) {
                return SrAclPermissions.findSrAclPermissions(id);
            }
        };
    }
    
    public Converter<String, SrAclPermissions> ApplicationConversionServiceFactoryBean.getStringToSrAclPermissionsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrAclPermissions>() {
            public com.osrce.sitrep.domain.SrAclPermissions convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrAclPermissions.class);
            }
        };
    }
    
    public Converter<SrAssets, String> ApplicationConversionServiceFactoryBean.getSrAssetsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrAssets, java.lang.String>() {
            public String convert(SrAssets srAssets) {
                return new StringBuilder().append(srAssets.getName()).append(' ').append(srAssets.getLastStatusId()).append(' ').append(srAssets.getLastLocationStatusId()).append(' ').append(srAssets.getLocationId()).toString();
            }
        };
    }
    
    public Converter<Integer, SrAssets> ApplicationConversionServiceFactoryBean.getIdToSrAssetsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrAssets>() {
            public com.osrce.sitrep.domain.SrAssets convert(java.lang.Integer id) {
                return SrAssets.findSrAssets(id);
            }
        };
    }
    
    public Converter<String, SrAssets> ApplicationConversionServiceFactoryBean.getStringToSrAssetsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrAssets>() {
            public com.osrce.sitrep.domain.SrAssets convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrAssets.class);
            }
        };
    }
    
    public Converter<SrAssetsStatus, String> ApplicationConversionServiceFactoryBean.getSrAssetsStatusToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrAssetsStatus, java.lang.String>() {
            public String convert(SrAssetsStatus srAssetsStatus) {
                return new StringBuilder().append(srAssetsStatus.getAssetId()).append(' ').append(srAssetsStatus.getLocationId()).append(' ').append(srAssetsStatus.getStatus()).append(' ').append(srAssetsStatus.getData()).toString();
            }
        };
    }
    
    public Converter<Integer, SrAssetsStatus> ApplicationConversionServiceFactoryBean.getIdToSrAssetsStatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrAssetsStatus>() {
            public com.osrce.sitrep.domain.SrAssetsStatus convert(java.lang.Integer id) {
                return SrAssetsStatus.findSrAssetsStatus(id);
            }
        };
    }
    
    public Converter<String, SrAssetsStatus> ApplicationConversionServiceFactoryBean.getStringToSrAssetsStatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrAssetsStatus>() {
            public com.osrce.sitrep.domain.SrAssetsStatus convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrAssetsStatus.class);
            }
        };
    }
    
    public Converter<SrCfs, String> ApplicationConversionServiceFactoryBean.getSrCfsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrCfs, java.lang.String>() {
            public String convert(SrCfs srCfs) {
                return new StringBuilder().append(srCfs.getCfsLetter()).append(' ').append(srCfs.getCfsPct()).append(' ').append(srCfs.getCfsSector()).append(' ').append(srCfs.getCfsAddr()).toString();
            }
        };
    }
    
    public Converter<SrCfsPK, SrCfs> ApplicationConversionServiceFactoryBean.getIdToSrCfsConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrCfsPK, com.osrce.sitrep.domain.SrCfs>() {
            public com.osrce.sitrep.domain.SrCfs convert(com.osrce.sitrep.domain.SrCfsPK id) {
                return SrCfs.findSrCfs(id);
            }
        };
    }
    
    public Converter<String, SrCfs> ApplicationConversionServiceFactoryBean.getStringToSrCfsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrCfs>() {
            public com.osrce.sitrep.domain.SrCfs convert(String id) {
                return getObject().convert(getObject().convert(id, SrCfsPK.class), SrCfs.class);
            }
        };
    }
    
    public Converter<SrCfsUpdatequeue, String> ApplicationConversionServiceFactoryBean.getSrCfsUpdatequeueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrCfsUpdatequeue, java.lang.String>() {
            public String convert(SrCfsUpdatequeue srCfsUpdatequeue) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<SrCfsUpdatequeuePK, SrCfsUpdatequeue> ApplicationConversionServiceFactoryBean.getIdToSrCfsUpdatequeueConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrCfsUpdatequeuePK, com.osrce.sitrep.domain.SrCfsUpdatequeue>() {
            public com.osrce.sitrep.domain.SrCfsUpdatequeue convert(com.osrce.sitrep.domain.SrCfsUpdatequeuePK id) {
                return SrCfsUpdatequeue.findSrCfsUpdatequeue(id);
            }
        };
    }
    
    public Converter<String, SrCfsUpdatequeue> ApplicationConversionServiceFactoryBean.getStringToSrCfsUpdatequeueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrCfsUpdatequeue>() {
            public com.osrce.sitrep.domain.SrCfsUpdatequeue convert(String id) {
                return getObject().convert(getObject().convert(id, SrCfsUpdatequeuePK.class), SrCfsUpdatequeue.class);
            }
        };
    }
    
    public Converter<SrGroups, String> ApplicationConversionServiceFactoryBean.getSrGroupsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrGroups, java.lang.String>() {
            public String convert(SrGroups srGroups) {
                return new StringBuilder().append(srGroups.getGroupname()).append(' ').append(srGroups.getParentGid()).toString();
            }
        };
    }
    
    public Converter<Integer, SrGroups> ApplicationConversionServiceFactoryBean.getIdToSrGroupsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrGroups>() {
            public com.osrce.sitrep.domain.SrGroups convert(java.lang.Integer id) {
                return SrGroups.findSrGroups(id);
            }
        };
    }
    
    public Converter<String, SrGroups> ApplicationConversionServiceFactoryBean.getStringToSrGroupsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrGroups>() {
            public com.osrce.sitrep.domain.SrGroups convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrGroups.class);
            }
        };
    }
    
    public Converter<SrLayerDynamicData, String> ApplicationConversionServiceFactoryBean.getSrLayerDynamicDataToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrLayerDynamicData, java.lang.String>() {
            public String convert(SrLayerDynamicData srLayerDynamicData) {
                return new StringBuilder().append(srLayerDynamicData.getLayerId()).append(' ').append(srLayerDynamicData.getFeatureData()).append(' ').append(srLayerDynamicData.getFeatureStart()).append(' ').append(srLayerDynamicData.getFeatureEnd()).toString();
            }
        };
    }
    
    public Converter<Integer, SrLayerDynamicData> ApplicationConversionServiceFactoryBean.getIdToSrLayerDynamicDataConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrLayerDynamicData>() {
            public com.osrce.sitrep.domain.SrLayerDynamicData convert(java.lang.Integer id) {
                return SrLayerDynamicData.findSrLayerDynamicData(id);
            }
        };
    }
    
    public Converter<String, SrLayerDynamicData> ApplicationConversionServiceFactoryBean.getStringToSrLayerDynamicDataConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrLayerDynamicData>() {
            public com.osrce.sitrep.domain.SrLayerDynamicData convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrLayerDynamicData.class);
            }
        };
    }
    
    public Converter<SrLayerStaticData, String> ApplicationConversionServiceFactoryBean.getSrLayerStaticDataToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrLayerStaticData, java.lang.String>() {
            public String convert(SrLayerStaticData srLayerStaticData) {
                return new StringBuilder().append(srLayerStaticData.getLayerId()).append(' ').append(srLayerStaticData.getFeatureStyle()).append(' ').append(srLayerStaticData.getFeatureData()).append(' ').append(srLayerStaticData.getSrGeom()).toString();
            }
        };
    }
    
    public Converter<Integer, SrLayerStaticData> ApplicationConversionServiceFactoryBean.getIdToSrLayerStaticDataConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrLayerStaticData>() {
            public com.osrce.sitrep.domain.SrLayerStaticData convert(java.lang.Integer id) {
                return SrLayerStaticData.findSrLayerStaticData(id);
            }
        };
    }
    
    public Converter<String, SrLayerStaticData> ApplicationConversionServiceFactoryBean.getStringToSrLayerStaticDataConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrLayerStaticData>() {
            public com.osrce.sitrep.domain.SrLayerStaticData convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrLayerStaticData.class);
            }
        };
    }
    
    public Converter<SrLayers, String> ApplicationConversionServiceFactoryBean.getSrLayersToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrLayers, java.lang.String>() {
            public String convert(SrLayers srLayers) {
                return new StringBuilder().append(srLayers.getName()).append(' ').append(srLayers.getType()).append(' ').append(srLayers.getFormat()).append(' ').append(srLayers.getProjection()).toString();
            }
        };
    }
    
    public Converter<Integer, SrLayers> ApplicationConversionServiceFactoryBean.getIdToSrLayersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrLayers>() {
            public com.osrce.sitrep.domain.SrLayers convert(java.lang.Integer id) {
                return SrLayers.findSrLayers(id);
            }
        };
    }
    
    public Converter<String, SrLayers> ApplicationConversionServiceFactoryBean.getStringToSrLayersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrLayers>() {
            public com.osrce.sitrep.domain.SrLayers convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrLayers.class);
            }
        };
    }
    
    public Converter<SrLocations, String> ApplicationConversionServiceFactoryBean.getSrLocationsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrLocations, java.lang.String>() {
            public String convert(SrLocations srLocations) {
                return new StringBuilder().append(srLocations.getPct()).append(' ').append(srLocations.getSector()).append(' ').append(srLocations.getSource()).append(' ').append(srLocations.getAddress()).toString();
            }
        };
    }
    
    public Converter<Integer, SrLocations> ApplicationConversionServiceFactoryBean.getIdToSrLocationsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrLocations>() {
            public com.osrce.sitrep.domain.SrLocations convert(java.lang.Integer id) {
                return SrLocations.findSrLocations(id);
            }
        };
    }
    
    public Converter<String, SrLocations> ApplicationConversionServiceFactoryBean.getStringToSrLocationsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrLocations>() {
            public com.osrce.sitrep.domain.SrLocations convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrLocations.class);
            }
        };
    }
    
    public Converter<SrLocationsWorkqueue, String> ApplicationConversionServiceFactoryBean.getSrLocationsWorkqueueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrLocationsWorkqueue, java.lang.String>() {
            public String convert(SrLocationsWorkqueue srLocationsWorkqueue) {
                return new StringBuilder().append(srLocationsWorkqueue.getLocationId()).toString();
            }
        };
    }
    
    public Converter<Integer, SrLocationsWorkqueue> ApplicationConversionServiceFactoryBean.getIdToSrLocationsWorkqueueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrLocationsWorkqueue>() {
            public com.osrce.sitrep.domain.SrLocationsWorkqueue convert(java.lang.Integer id) {
                return SrLocationsWorkqueue.findSrLocationsWorkqueue(id);
            }
        };
    }
    
    public Converter<String, SrLocationsWorkqueue> ApplicationConversionServiceFactoryBean.getStringToSrLocationsWorkqueueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrLocationsWorkqueue>() {
            public com.osrce.sitrep.domain.SrLocationsWorkqueue convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrLocationsWorkqueue.class);
            }
        };
    }
    
    public Converter<SrModules, String> ApplicationConversionServiceFactoryBean.getSrModulesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrModules, java.lang.String>() {
            public String convert(SrModules srModules) {
                return new StringBuilder().append(srModules.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, SrModules> ApplicationConversionServiceFactoryBean.getIdToSrModulesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrModules>() {
            public com.osrce.sitrep.domain.SrModules convert(java.lang.Integer id) {
                return SrModules.findSrModules(id);
            }
        };
    }
    
    public Converter<String, SrModules> ApplicationConversionServiceFactoryBean.getStringToSrModulesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrModules>() {
            public com.osrce.sitrep.domain.SrModules convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrModules.class);
            }
        };
    }
    
    public Converter<SrQueries, String> ApplicationConversionServiceFactoryBean.getSrQueriesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrQueries, java.lang.String>() {
            public String convert(SrQueries srQueries) {
                return new StringBuilder().append(srQueries.getParent()).append(' ').append(srQueries.getName()).append(' ').append(srQueries.getNotes()).append(' ').append(srQueries.getData()).toString();
            }
        };
    }
    
    public Converter<Integer, SrQueries> ApplicationConversionServiceFactoryBean.getIdToSrQueriesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrQueries>() {
            public com.osrce.sitrep.domain.SrQueries convert(java.lang.Integer id) {
                return SrQueries.findSrQueries(id);
            }
        };
    }
    
    public Converter<String, SrQueries> ApplicationConversionServiceFactoryBean.getStringToSrQueriesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrQueries>() {
            public com.osrce.sitrep.domain.SrQueries convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrQueries.class);
            }
        };
    }
    
    public Converter<SrSession, String> ApplicationConversionServiceFactoryBean.getSrSessionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrSession, java.lang.String>() {
            public String convert(SrSession srSession) {
                return new StringBuilder().append(srSession.getModified()).append(' ').append(srSession.getLifetime()).append(' ').append(srSession.getData()).toString();
            }
        };
    }
    
    public Converter<String, SrSession> ApplicationConversionServiceFactoryBean.getIdToSrSessionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrSession>() {
            public com.osrce.sitrep.domain.SrSession convert(java.lang.String id) {
                return SrSession.findSrSession(id);
            }
        };
    }
    
    public Converter<SrStylePresets, String> ApplicationConversionServiceFactoryBean.getSrStylePresetsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrStylePresets, java.lang.String>() {
            public String convert(SrStylePresets srStylePresets) {
                return new StringBuilder().append(srStylePresets.getName()).append(' ').append(srStylePresets.getStyleId()).append(' ').append(srStylePresets.getLayerId()).append(' ').append(srStylePresets.getCreatedOn()).toString();
            }
        };
    }
    
    public Converter<Integer, SrStylePresets> ApplicationConversionServiceFactoryBean.getIdToSrStylePresetsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrStylePresets>() {
            public com.osrce.sitrep.domain.SrStylePresets convert(java.lang.Integer id) {
                return SrStylePresets.findSrStylePresets(id);
            }
        };
    }
    
    public Converter<String, SrStylePresets> ApplicationConversionServiceFactoryBean.getStringToSrStylePresetsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrStylePresets>() {
            public com.osrce.sitrep.domain.SrStylePresets convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrStylePresets.class);
            }
        };
    }
    
    public Converter<SrStyleRules, String> ApplicationConversionServiceFactoryBean.getSrStyleRulesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrStyleRules, java.lang.String>() {
            public String convert(SrStyleRules srStyleRules) {
                return new StringBuilder().append(srStyleRules.getName()).append(' ').append(srStyleRules.getStyleId()).append(' ').append(srStyleRules.getSymbolizerId()).append(' ').append(srStyleRules.getFilterData()).toString();
            }
        };
    }
    
    public Converter<Integer, SrStyleRules> ApplicationConversionServiceFactoryBean.getIdToSrStyleRulesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrStyleRules>() {
            public com.osrce.sitrep.domain.SrStyleRules convert(java.lang.Integer id) {
                return SrStyleRules.findSrStyleRules(id);
            }
        };
    }
    
    public Converter<String, SrStyleRules> ApplicationConversionServiceFactoryBean.getStringToSrStyleRulesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrStyleRules>() {
            public com.osrce.sitrep.domain.SrStyleRules convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrStyleRules.class);
            }
        };
    }
    
    public Converter<SrStyleSymbolizers, String> ApplicationConversionServiceFactoryBean.getSrStyleSymbolizersToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrStyleSymbolizers, java.lang.String>() {
            public String convert(SrStyleSymbolizers srStyleSymbolizers) {
                return new StringBuilder().append(srStyleSymbolizers.getName()).append(' ').append(srStyleSymbolizers.getLabel()).append(' ').append(srStyleSymbolizers.getFillcolor()).append(' ').append(srStyleSymbolizers.getFillopacity()).toString();
            }
        };
    }
    
    public Converter<Integer, SrStyleSymbolizers> ApplicationConversionServiceFactoryBean.getIdToSrStyleSymbolizersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrStyleSymbolizers>() {
            public com.osrce.sitrep.domain.SrStyleSymbolizers convert(java.lang.Integer id) {
                return SrStyleSymbolizers.findSrStyleSymbolizers(id);
            }
        };
    }
    
    public Converter<String, SrStyleSymbolizers> ApplicationConversionServiceFactoryBean.getStringToSrStyleSymbolizersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrStyleSymbolizers>() {
            public com.osrce.sitrep.domain.SrStyleSymbolizers convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrStyleSymbolizers.class);
            }
        };
    }
    
    public Converter<SrStyles, String> ApplicationConversionServiceFactoryBean.getSrStylesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrStyles, java.lang.String>() {
            public String convert(SrStyles srStyles) {
                return new StringBuilder().append(srStyles.getName()).append(' ').append(srStyles.getStylemapId()).append(' ').append(srStyles.getRenderType()).append(' ').append(srStyles.getDefaultsymbolizerId()).toString();
            }
        };
    }
    
    public Converter<Integer, SrStyles> ApplicationConversionServiceFactoryBean.getIdToSrStylesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrStyles>() {
            public com.osrce.sitrep.domain.SrStyles convert(java.lang.Integer id) {
                return SrStyles.findSrStyles(id);
            }
        };
    }
    
    public Converter<String, SrStyles> ApplicationConversionServiceFactoryBean.getStringToSrStylesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrStyles>() {
            public com.osrce.sitrep.domain.SrStyles convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrStyles.class);
            }
        };
    }
    
    public Converter<SrUsers, String> ApplicationConversionServiceFactoryBean.getSrUsersToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrUsers, java.lang.String>() {
            public String convert(SrUsers srUsers) {
                return new StringBuilder().append(srUsers.getGid()).append(' ').append(srUsers.getUsername()).append(' ').append(srUsers.getFirstname()).append(' ').append(srUsers.getLastname()).toString();
            }
        };
    }
    
    public Converter<Integer, SrUsers> ApplicationConversionServiceFactoryBean.getIdToSrUsersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrUsers>() {
            public com.osrce.sitrep.domain.SrUsers convert(java.lang.Integer id) {
                return SrUsers.findSrUsers(id);
            }
        };
    }
    
    public Converter<String, SrUsers> ApplicationConversionServiceFactoryBean.getStringToSrUsersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrUsers>() {
            public com.osrce.sitrep.domain.SrUsers convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrUsers.class);
            }
        };
    }
    
    public Converter<SrWindowLayout, String> ApplicationConversionServiceFactoryBean.getSrWindowLayoutToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrWindowLayout, java.lang.String>() {
            public String convert(SrWindowLayout srWindowLayout) {
                return new StringBuilder().append(srWindowLayout.getName()).append(' ').append(srWindowLayout.getShowname()).append(' ').append(srWindowLayout.getTheme()).append(' ').append(srWindowLayout.getViewX()).toString();
            }
        };
    }
    
    public Converter<Integer, SrWindowLayout> ApplicationConversionServiceFactoryBean.getIdToSrWindowLayoutConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.osrce.sitrep.domain.SrWindowLayout>() {
            public com.osrce.sitrep.domain.SrWindowLayout convert(java.lang.Integer id) {
                return SrWindowLayout.findSrWindowLayout(id);
            }
        };
    }
    
    public Converter<String, SrWindowLayout> ApplicationConversionServiceFactoryBean.getStringToSrWindowLayoutConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrWindowLayout>() {
            public com.osrce.sitrep.domain.SrWindowLayout convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SrWindowLayout.class);
            }
        };
    }
    
    public Converter<String, SrCfsPK> ApplicationConversionServiceFactoryBean.getJsonToSrCfsPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrCfsPK>() {
            public SrCfsPK convert(String encodedJson) {
                return SrCfsPK.fromJsonToSrCfsPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<SrCfsPK, String> ApplicationConversionServiceFactoryBean.getSrCfsPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrCfsPK, java.lang.String>() {
            public String convert(SrCfsPK srCfsPK) {
                return Base64.encodeBase64URLSafeString(srCfsPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, SrCfsUpdatequeuePK> ApplicationConversionServiceFactoryBean.getJsonToSrCfsUpdatequeuePKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.osrce.sitrep.domain.SrCfsUpdatequeuePK>() {
            public SrCfsUpdatequeuePK convert(String encodedJson) {
                return SrCfsUpdatequeuePK.fromJsonToSrCfsUpdatequeuePK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<SrCfsUpdatequeuePK, String> ApplicationConversionServiceFactoryBean.getSrCfsUpdatequeuePKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.osrce.sitrep.domain.SrCfsUpdatequeuePK, java.lang.String>() {
            public String convert(SrCfsUpdatequeuePK srCfsUpdatequeuePK) {
                return Base64.encodeBase64URLSafeString(srCfsUpdatequeuePK.toJson().getBytes());
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getSpatialRefSysToStringConverter());
        registry.addConverter(getIdToSpatialRefSysConverter());
        registry.addConverter(getStringToSpatialRefSysConverter());
        registry.addConverter(getSrAclPermissionsToStringConverter());
        registry.addConverter(getIdToSrAclPermissionsConverter());
        registry.addConverter(getStringToSrAclPermissionsConverter());
        registry.addConverter(getSrAssetsToStringConverter());
        registry.addConverter(getIdToSrAssetsConverter());
        registry.addConverter(getStringToSrAssetsConverter());
        registry.addConverter(getSrAssetsStatusToStringConverter());
        registry.addConverter(getIdToSrAssetsStatusConverter());
        registry.addConverter(getStringToSrAssetsStatusConverter());
        registry.addConverter(getSrCfsToStringConverter());
        registry.addConverter(getIdToSrCfsConverter());
        registry.addConverter(getStringToSrCfsConverter());
        registry.addConverter(getSrCfsUpdatequeueToStringConverter());
        registry.addConverter(getIdToSrCfsUpdatequeueConverter());
        registry.addConverter(getStringToSrCfsUpdatequeueConverter());
        registry.addConverter(getSrGroupsToStringConverter());
        registry.addConverter(getIdToSrGroupsConverter());
        registry.addConverter(getStringToSrGroupsConverter());
        registry.addConverter(getSrLayerDynamicDataToStringConverter());
        registry.addConverter(getIdToSrLayerDynamicDataConverter());
        registry.addConverter(getStringToSrLayerDynamicDataConverter());
        registry.addConverter(getSrLayerStaticDataToStringConverter());
        registry.addConverter(getIdToSrLayerStaticDataConverter());
        registry.addConverter(getStringToSrLayerStaticDataConverter());
        registry.addConverter(getSrLayersToStringConverter());
        registry.addConverter(getIdToSrLayersConverter());
        registry.addConverter(getStringToSrLayersConverter());
        registry.addConverter(getSrLocationsToStringConverter());
        registry.addConverter(getIdToSrLocationsConverter());
        registry.addConverter(getStringToSrLocationsConverter());
        registry.addConverter(getSrLocationsWorkqueueToStringConverter());
        registry.addConverter(getIdToSrLocationsWorkqueueConverter());
        registry.addConverter(getStringToSrLocationsWorkqueueConverter());
        registry.addConverter(getSrModulesToStringConverter());
        registry.addConverter(getIdToSrModulesConverter());
        registry.addConverter(getStringToSrModulesConverter());
        registry.addConverter(getSrQueriesToStringConverter());
        registry.addConverter(getIdToSrQueriesConverter());
        registry.addConverter(getStringToSrQueriesConverter());
        registry.addConverter(getSrSessionToStringConverter());
        registry.addConverter(getIdToSrSessionConverter());
        registry.addConverter(getSrStylePresetsToStringConverter());
        registry.addConverter(getIdToSrStylePresetsConverter());
        registry.addConverter(getStringToSrStylePresetsConverter());
        registry.addConverter(getSrStyleRulesToStringConverter());
        registry.addConverter(getIdToSrStyleRulesConverter());
        registry.addConverter(getStringToSrStyleRulesConverter());
        registry.addConverter(getSrStyleSymbolizersToStringConverter());
        registry.addConverter(getIdToSrStyleSymbolizersConverter());
        registry.addConverter(getStringToSrStyleSymbolizersConverter());
        registry.addConverter(getSrStylesToStringConverter());
        registry.addConverter(getIdToSrStylesConverter());
        registry.addConverter(getStringToSrStylesConverter());
        registry.addConverter(getSrUsersToStringConverter());
        registry.addConverter(getIdToSrUsersConverter());
        registry.addConverter(getStringToSrUsersConverter());
        registry.addConverter(getSrWindowLayoutToStringConverter());
        registry.addConverter(getIdToSrWindowLayoutConverter());
        registry.addConverter(getStringToSrWindowLayoutConverter());
        registry.addConverter(getJsonToSrCfsPKConverter());
        registry.addConverter(getSrCfsPKToJsonConverter());
        registry.addConverter(getJsonToSrCfsUpdatequeuePKConverter());
        registry.addConverter(getSrCfsUpdatequeuePKToJsonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
